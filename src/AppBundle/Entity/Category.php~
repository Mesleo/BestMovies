<?php
// src/AppBundle/Entity/Category.php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * @ORM\Table(name="category")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\CategoryRepository")
 */

class Category
{
    /**
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="nombre", type="string", length=100, nullable=false)
     */
    private $name;

    /**
     * @ORM\OneToMany(targetEntity="MovieCategory", mappedBy="categories",cascade={"persist","remove"} )
     */
    private $hasMovies;


    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     *
     * @return Category
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->hasMovies = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add hasMovie
     *
     * @param \AppBundle\Entity\MovieCategory $hasMovie
     *
     * @return Category
     */
    public function addHasMovie(\AppBundle\Entity\MovieCategory $hasMovie)
    {
        $this->hasMovies[] = $hasMovie;

        return $this;
    }

    /**
     * Remove hasMovie
     *
     * @param \AppBundle\Entity\MovieCategory $hasMovie
     */
    public function removeHasMovie(\AppBundle\Entity\MovieCategory $hasMovie)
    {
        $this->hasMovies->removeElement($hasMovie);
    }

    /**
     * Get hasMovies
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getHasMovies()
    {
        return $this->hasMovies;
    }
}
